import requests
from telegram import Update
from telegram.ext import ApplicationBuilder, MessageHandler, filters, ContextTypes
import asyncio

TOKEN = ""

# –ü–∞–º—è—Ç—å –¥–ª—è chat_id
users = set()

def get_ngrok_url():
    try:
        response = requests.get("http://127.0.0.1:4040/api/tunnels")
        return response.json()['tunnels'][0]['public_url']
    except:
        return "‚ö†Ô∏è Ngrok –µ—â—ë –Ω–µ –∑–∞–ø—É—â–µ–Ω"

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.message.chat_id
    users.add(chat_id)  # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø–∞–º—è—Ç—å
    url = get_ngrok_url()
    await update.message.reply_text(f"üåê –°–∞–π—Ç –∑–∞–ø—É—â–µ–Ω: {url}")

# –†–∞—Å—Å—ã–ª–∫–∞ –≤—Å–µ–º, –∫—Ç–æ –ø–∏—Å–∞–ª –±–æ—Ç—É
async def send_to_all(context: ContextTypes.DEFAULT_TYPE):
    url = get_ngrok_url()
    for chat_id in users:
        await context.bot.send_message(chat_id=chat_id, text=f"üåê –°–∞–π—Ç –∑–∞–ø—É—â–µ–Ω: {url}")

if __name__ == "__main__":
    app = ApplicationBuilder().token(TOKEN).build()
    
    # –õ—é–±—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    app.add_handler(MessageHandler(filters.TEXT, handle_message))
    
    # –ü—Ä–∏–º–µ—Ä: —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥ –ø–æ—Å–ª–µ —Å—Ç–∞—Ä—Ç–∞ —Ä–∞—Å—Å—ã–ª–∞–µ–º –≤—Å–µ–º
    async def start_sending():
        await asyncio.sleep(5)
        await send_to_all(app)

    asyncio.run(asyncio.gather(
        app.run_polling(),
        start_sending()
    ))

